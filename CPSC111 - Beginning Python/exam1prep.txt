#exam 1 review

1 Introduction to Computer Science, Programming, and Python
(Chapters 1 and 2 in zyBooks; Chapter 1 in How to Think Like a Computer Scientist)

1. Define what is an algorithm
    - Formal definition
    - Examples
What are the 6 fundamental operations a computer can perform?
What are high-level programming languages?
The continuum of languages
How the Python Interpreter works
Define what is a comment
Single line comments
Block (multi-line) comments
Describe and provide examples of each
Standard identifiers
User-defined identifiers
Reserved keywords
Describe the rules for naming an identifier
Consider Python constraints and naming conventions used in the class
Python is case sensitive
Define what is a variable
Memory is allocated when a variable is declared
Assigning a value to a variable
How to read y = 5: "y gets x" or "y is assigned x"
Define what is a data type
List three Python types and examples of each
Integer (int)
Floating-point (float)
String (str)
Input/output functions
Apply print() and input()
Describe what is a prompt
Using the help() function
Define and apply escape sequences (the newline (\n) and double quote (\") are examples of escape sequences)
Describe and apply elements of "good" Python style and "best" programming practices
2 Arithmetic
(Chapter 3 in zyBooks; Chapter 2 in How to Think Like a Computer Scientist)

Apply operators to Python types
Arithmetic operators include: +, -, *, /, //, %, and $**$
Construct and evaluate valid numerical expressions, including mixed-type expressions
Apply operator precedence (review the precedence table!!)
*, /, //, % have the same precedence
+, - have the same precedence, but lower than *, /, //, %
Type casting (type conversion)
int()
float()
str()
Formatting numeric output using placeholders in a string
%d
%f, %.2f, etc.
%s
What is the general algorithm applied to problems in this course?
Get inputs
Perform computations
Output results
3 Functions
(Chapters 4 and 5 in zyBooks; Chapters 3, 5, and 6 in How to Think Like a Computer Scientist)

Define what is a module
Apply the import reserved keyword
Apply Python math module variables and functions
Some of these include: pi, sqrt(), sin(), cos(), etc.
Define what is a function in Python
General rule-of-thumb is 1 function = 1 algorithm = 1 task
Construct functions that solve sub-problems
Define parameter, argument, global variable, and local variable
Name, order of arguments, and return value are very important
Cite advantages of using functions in Python
What is a function call?
How do arguments relate to function calls?
Based on a function call, how do you know if the function returns a value?
There is an assignment operator to the left of the function call
There are arithmetic/logical/relational operators to the left or right of the function call
The function call is included in another function call as an argument
Define what is scope
How do functions communicate with main() and vice versa?
What is a calling function?
What is the call stack and how does Python use it?
What is a docstring
Describe and provide examples of the three types of errors that can occur in a program
Describe what is a syntax error
Which software tool reports these errors?
Explain what is a logic error
Describe what is a runtime error
How to debug your program?
4 Conditionals
(Chapter 6 in zyBooks; Chapter 7 in How to Think Like a Computer Scientist)

What is a Boolean condition?
List and apply relational operators
These include: <, >, <=, >=, ==, !=
Distinguish between = and ==
List and apply logical operators
These include: not, and, or
Apply Boolean operator precedence (review the precedence table!!)
Describe what is short circuit evaluation?
Applies to conditional statements with compound logic
Define and apply Boolean expressions
DeMorgan's Law
What are the three types of statements that algorithms are composed of?
Sequential statements
Conditional statements
Iterative statements
Construct multiple alternative if statements in Python
Construct nested if statements
How is false defined in Python? How about true?
bool type
Define what is a predicate function
Other Topics
(Chapter 4 in How to Think Like a Computer Scientist)

Turtle graphics
